[project]
name = "speech-transcription"
version = "0.0.1"
description = "Speech Transcription is an API for automatic speech transcription, enabling accurate transcription of audio into text."
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "advanced-alchemy>=1.4.1",
    "asyncpg>=0.30.0",
    "bcrypt<4.1",
    "black>=25.1.0",
    "fastapi>=0.115.12",
    "freezegun>=1.5.1",
    "httpx>=0.28.1",
    "isort>=6.0.1",
    "passlib[argon2]>=1.7.4",
    "pydantic>=2.11.4",
    "pydantic-settings>=2.9.1",
    "pyjwt>=2.10.1",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "python-multipart>=0.0.12",
    "ruff>=0.11.8",
    "scalar-fastapi>=1.0.3",
    "sqlalchemy>=2.0.40",
    "srt>=3.5.3",
    "uvicorn>=0.34.2",
    "whisperx>=3.3.1",
]

[tool.black]
line-length = 80
target-version = ['py310']

[tool.isort]
profile = "black"
line_length = 80
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.ruff]
lint.select = [
    "E",
    "W",
    "F",
    "C",
    "B",
]

lint.ignore = [
    "E501",
    "B008",
    "C901",
]

lint.fixable = [
    "A", "B", "C", "D", "E", "F"
]

lint.unfixable = []

lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations"
]

line-length = 80
